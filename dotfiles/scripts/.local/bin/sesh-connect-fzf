#!/usr/bin/env bash

FZF_CMD="fzf --multi"
if [ -n "$TMUX" ]; then
  FZF_CMD="fzf-tmux --multi -p 80%,70%"
fi

selected_sessions="$(
  sesh list --icons | $FZF_CMD \
    --no-sort --ansi --border-label ' sesh ' --prompt '⚡  ' \
    --header '^a all ^t tmux ^g configs ^x zoxide ^d tmux kill ^f find' \
    --bind 'tab:select+down,btab:deselect+up' \
    --bind 'ctrl-a:change-prompt(⚡  )+reload(sesh list --icons)' \
    --bind 'ctrl-t:change-prompt(🪟  )+reload(sesh list -t --icons)' \
    --bind 'ctrl-g:change-prompt(⚙️  )+reload(sesh list -c --icons)' \
    --bind 'ctrl-x:change-prompt(📁  )+reload(sesh list -z --icons)' \
    --bind 'ctrl-f:change-prompt(🔎  )+reload(fd -H -d 2 -t d -E .Trash . ~)' \
    --bind 'ctrl-d:execute(tmux kill-session -t {2..})+change-prompt(⚡  )+reload(sesh list --icons)' \
    --preview-window 'right:55%' \
    --preview 'sesh preview {}'
)"

if [ -n "$selected_sessions" ]; then
  readarray -t sessions <<< "$selected_sessions"

  count=${#sessions[@]}
  for ((i = 0; i < count; i++)); do
    session="${sessions[i]}"

    if [ -z "$TMUX" ]; then
      echo "Connecting to session $((i + 1))/${count}: ${session}"
    fi

    if [ $i -eq $((count - 1)) ]; then
      # Last session - connect and stay attached
      sesh connect "$session" &> /dev/null
    else
      # Not the last session - connect and detach
      if [ -z "$TMUX" ]; then
        sesh connect "$session" --switch &> /dev/null
      else
        sesh connect "$session" --command "tmux detach-client" &> /dev/null
      fi
    fi
  done
fi
